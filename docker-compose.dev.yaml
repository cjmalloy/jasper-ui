# Development Docker Compose
# Run `npm run start:full` to start the complete development stack
# Frontend will be on http://localhost:4200/
# Backend API will be on http://localhost:8081/

services:
  web:
    image: ghcr.io/cjmalloy/jasper:master
    ports:
      - 8081:80
    healthcheck:
      test: "curl -f http://localhost/management/health/readiness || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      SPRING_LOGGING_LEVEL_ROOT: WARN
      SPRING_PROFILES_ACTIVE: prod,jwt,storage
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/jasper
      SPRING_DATASOURCE_USERNAME: jasper
      SPRING_DATASOURCE_PASSWORD: jasper
      SERVER_PORT: 80
      JASPER_CORS_ALLOWED_ORIGINS: 'http://localhost:4200,http://localhost:8080'
      JASPER_CORS_ALLOWED_METHODS: '*'
      JASPER_CORS_ALLOWED_HEADERS: '*'
      JASPER_CORS_EXPOSED_HEADERS: 'Authorization,Link,X-Total-Count'
      JASPER_CORS_ALLOW_CREDENTIALS: true
      JASPER_CORS_MAX_AGE: 1800
      JASPER_OVERRIDE_SECURITY_MODE: 'jwt'
      JASPER_OVERRIDE_SECURITY_CLIENT_ID: ''
      JASPER_OVERRIDE_SECURITY_BASE64_SECRET: 'MjY0ZWY2ZTZhYmJhMTkyMmE5MTAxMTg3Zjc2ZDlmZWUwYjk0MDgzODA0MDJiOTgyNTk4MmNjYmQ4Yjg3MmVhYjk0MmE0OGFmNzE2YTQ5ZjliMTEyN2NlMWQ4MjA5OTczYjU2NzAxYTc4YThkMzYxNzdmOTk5MTIxODZhMTkwMDM='
      JASPER_DEFAULT_ROLE: ROLE_ADMIN
      JASPER_OVERRIDE_SECURITY_DEFAULT_USER: +user/dev
      JASPER_HEAP: 256m
    depends_on:
      db:
        condition: service_started
    restart: unless-stopped

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: jasper
      POSTGRES_PASSWORD: jasper
      POSTGRES_DB: jasper
    volumes:
      - jasper_dev_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Optional: Run a built version of the UI in Docker
  # Use this when you want to test the full dockerized setup
  client:
    build: .
    ports:
      - 8080:80
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: 1
      JASPER_API: http://localhost:8081
      CSP_DEFAULT_SRC: http://localhost:8081 ws://localhost:8081
      CSP_CONNECT_SRC: http://localhost:8081 ws://localhost:8081
      JASPER_TITLE: DEV
    depends_on:
      web:
        condition: service_healthy
    profiles:
      - with-ui

volumes:
  jasper_dev_data: