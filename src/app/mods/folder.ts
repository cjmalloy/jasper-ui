import * as moment from 'moment';
import { Plugin } from '../model/plugin';
import { Mod } from '../model/tag';
import { Template } from '../model/template';

export const folderTemplate: Template = {
  tag: 'folder',
  name: $localize`📂️ Folder`,
  config: {
    type: 'lens',
    experimental: true,
    generated: 'Generated by jasper-ui ' + moment().toISOString(),
    submit: $localize`📂️ folder/`,
    view: $localize`📂️`,
    writeAccess: ['+folder'],
    description: $localize`Activates built-in Folder mode for viewing Refs.`,
    filters: [
      { query: 'folder', label: $localize`📂️ folder`, group: $localize`Templates 🎨️` },
    ],
  },
  defaults: {
    files: {},
    subfolders: {},
  },
  schema: {
    definitions: {
      Pos: {
        optionalProperties: {
          x: { type: 'uint32' },
          y: { type: 'uint32' }
        }
      }
    },
    optionalProperties: {
      flatten: { type: 'boolean' },
    },
    properties: {
      files: { values: { ref: 'Pos' }},
      subfolders: { values: { ref: 'Pos' }},
    },
  },
};

export interface Pos {
  x: number;
  y: number;
}

export const filePlugin: Plugin = {
  tag: 'plugin/file',
  name: $localize`💾️️ File`,
  config: {
    type: 'plugin',
    default: true,
    generated: $localize`Generated by jasper-ui ${moment().toISOString()}`,
    icons: [{ label: $localize`💾️️`, order: 1 }],
    filters: [
      { query: 'plugin/file', label: $localize`💾️️ file`, group: $localize`Plugins 🧰️` },
    ],
  },
};

export const folderMod: Mod = {
  plugins: {
    filePlugin,
  },
  templates: {
    folderTemplate,
  }
}
