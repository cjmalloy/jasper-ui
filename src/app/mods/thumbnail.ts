import * as moment from 'moment';
import { Plugin } from '../model/plugin';
import { imagePlugin } from './image';
import { videoPlugin } from './video';

export const thumbnailPlugin: Plugin = {
  tag: 'plugin/thumbnail',
  name: $localize`‚≠ïÔ∏è Thumbnail`,
  config: {
    type: 'plugin',
    default: true,
    cache: true,
    add: true,
    generated: $localize`Generated by jasper-ui ${moment().toISOString()}`,
    description: $localize`Activates built-in thumbnail support and allows users to add thumbnails to Refs.`,
    aiInstructions: `# plugin/thumbnail
    The thumbnail plugin is installed, which means a thumbnail may/may not be displayed to the left of the title.
    The thumbnail is enabled with the plugin/thumbnail plugin and can be set by either the Ref url or the plugin
    data url. However, if a Ref does not have a thumbnail set, it may inherit a default thumbnail from a Plugin.
    For example, the plugin/thread Plugin has the following icons set:
    \`\`\`json
    icons: [{ thumbnail: $localize\`üßµÔ∏è\` }],
    \`\`\`
    While the plugin/chat Plugins has this:
    \`\`\`json
    icons: [{ thumbnail: $localize\`üí¨Ô∏è\`, order: 1 }],
    \`\`\`
    So if they were on the same Ref, the plugin/chat would take priority and that
    would be the thumbnail.
    `,
    filters: [
      { query: 'plugin/thumbnail', label: $localize`‚≠ïÔ∏è thumbnail`, group: $localize`Plugins üß∞Ô∏è` },
    ],
    extensions: [...videoPlugin.config!.extensions!, ...imagePlugin.config!.extensions!],
    advancedForm: [{
      key: 'url',
      type: 'image',
      props: {
        label: $localize`URL:`,
      },
    }, {
      key: 'color',
      type: 'color',
      props: {
        label: $localize`Color:`,
      },
    }, {
      key: 'emoji',
      type: 'string',
      props: {
        label: $localize`Emoji:`,
      },
    }, {
      key: 'radius',
      type: 'number',
      props: {
        label: $localize`Radius:`,
      },
    }],
  },
  schema: {
    optionalProperties: {
      url: { type: 'string' },
      color: { type: 'string' },
      emoji: { type: 'string' },
      radius: { type: 'int32' },
    },
  },
};
