import { $localize } from '@angular/localize/init';
import { DateTime } from 'luxon';
import { Mod } from '../model/tag';
import { Template } from '../model/template';

export const DEFAULT_WIKI_PREFIX = 'wiki:';

export const wikiConfig: Template = {
  tag: 'wiki',
  name: $localize`📔️ Wiki`,
  config: {
    mod: $localize`📔️ Wiki`,
    type: 'config',
    default: true,
    generated: $localize`Generated by jasper-ui ${DateTime.now().toISO()}`,
    description: $localize`Activates built-in Wiki support and allows users to create Wikis.`,
    icons: [{ label: $localize`📔️`, scheme: DEFAULT_WIKI_PREFIX, title: $localize`Wiki`, order: 3 }],
    filters: [
      { scheme: 'wiki:', label: $localize`wiki:`, title: $localize`Wiki Pages`, group: $localize`Schemes 🏳️️` },
    ],
    /**
     * Set prefix for wiki links.
     */
    prefix: DEFAULT_WIKI_PREFIX,
    /**
     * Open wiki links externally.
     */
    external: false,
  },
};

export function wikiTitleFormat(title: string, prefix?: string) {
  prefix ||= DEFAULT_WIKI_PREFIX;
  return wikiUriFormat(title)
    .substring(prefix.length)
    .replace(/_/g, ' ');
}

export function wikiUriFormat(uri: string, prefix?: string) {
  prefix ||= DEFAULT_WIKI_PREFIX!;
  if (!uri) return prefix;
  uri = uri.trim();
  if (uri.startsWith(prefix)) {
    uri = uri.substring(prefix.length);
  }
  return prefix + uri
    .replace(/\s+/g, '_')
    .replace(/_+/g, '_')
    .replace(/[^\w!"$&'()*,.\/:;=?@\\^`~\x80-\xFF-]+/g, '')
    .split(':').map(s => s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase()).join(':');
}

export function isWiki(uri: string, prefix?: string) {
  prefix ||= DEFAULT_WIKI_PREFIX!;
  return uri.startsWith(prefix);
}

export const wikiMod: Mod = {
  template: [
    wikiConfig,
  ]
};
