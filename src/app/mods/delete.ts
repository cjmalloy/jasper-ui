import * as moment from 'moment';
import { Plugin } from '../model/plugin';
import { Ref } from '../model/ref';
import { Config, Tag } from "../model/tag";

export const deletePlugin: Plugin = {
  tag: 'plugin/delete',
  name: $localize`üóëÔ∏è Delete Notice`,
  config: {
    type: 'plugin',
    generated: $localize`Generated by jasper-ui ${moment().toISOString()}`,
    description: $localize`Activates built-in delete notice support which clears refs and marks them as deleted instead of actually deleting them.`,
  },
};

export function deleteNotice(ref: Ref): Ref {
  return {
    url: ref.url,
    origin: ref.origin,
    tags: ['plugin/delete', 'internal'],
    created: ref.created,
    published: ref.published,
    modifiedString: ref.modifiedString,
  };
}

export function tagDeleteNotice(tag: Tag) {
  return {
    tag: tag.tag,
    origin: tag.origin,
    modifiedString: tag.modifiedString,
  };
}

export function configDeleteNotice(config: Config) {
  return {
    tag: config.tag,
    origin: config.origin,
    config: { deleted: true },
    modifiedString: config.modifiedString,
  };
}
