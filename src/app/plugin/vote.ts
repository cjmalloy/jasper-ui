import * as moment from 'moment';
import { Plugin } from '../model/plugin';
import { Ref } from '../model/ref';

export const voteUpPlugin: Plugin = {
  tag: 'plugin/vote/up',
  name: '⬆️ Vote Up',
  config: {
    experimental: true,
    generated: 'Generated by jenkins-ui ' + moment().toISOString(),
    description: $localize`Activates built-in voting support and allows users to upvote Refs.`,
    label: '⬆️',
  },
  generateMetadata: true,
  userUrl: true,
};


export const voteDownPlugin: Plugin = {
  tag: 'plugin/vote/down',
  name: '⬇️ Vote Down',
  config: {
    experimental: true,
    generated: 'Generated by jenkins-ui ' + moment().toISOString(),
    description: $localize`Allows users to downvote Refs. Required upvote plugin to be installed.`,
    label: '⬇️',
  },
  generateMetadata: true,
  userUrl: true,
};

export function score(ref: Ref) {
  let score = 0;
  if (ref.metadata?.plugins?.['plugin/vote/up']) {
    score += ref.metadata?.plugins['plugin/vote/up'];
  }
  if (ref.metadata?.plugins?.['plugin/vote/down']) {
    score -= ref.metadata?.plugins['plugin/vote/down'];
  }
  return score;
}
