import * as moment from 'moment';
import { Plugin } from '../model/plugin';


export const DEFAULT_WIKI_PREFIX = 'wiki:';

export const wikiPlugin: Plugin = {
  tag: 'plugin/wiki',
  name: $localize`Wiki`,
  config: {
    default: true,
    generated: $localize`Generated by jasper-ui ${moment().toISOString()}`,
    /**
     * Set prefix for wiki links.
     */
    prefix: DEFAULT_WIKI_PREFIX,
    /**
     * Open wiki links externally.
     */
    external: false,
  },
};

export function wikiTitleFormat(title: string, prefix?: string) {
  prefix ||= DEFAULT_WIKI_PREFIX;
  return wikiUriFormat(title)
    .substring(prefix.length)
    .replace(/_/g, ' ');
}

export function wikiUriFormat(uri: string, prefix?: string) {
  prefix ||= DEFAULT_WIKI_PREFIX!;
  if (!uri) return prefix;
  uri = uri.trim();
  if (uri.startsWith(prefix)) {
    uri = uri.substring(prefix.length);
  }
  return prefix + uri
    .replace(/\s+/g, '_')
    .replace(/_+/g, '_')
    .replace(/[^\w!"$&'()*,.\/:;=?@\\^`~\x80-\xFF-]+/g, '')
    .split(':').map(s => s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase()).join(':');
}


export function isWiki(uri: string, prefix?: string) {
  prefix ||= DEFAULT_WIKI_PREFIX!;
  return uri.startsWith(prefix);
}
