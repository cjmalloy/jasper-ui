import * as moment from 'moment';
import { Plugin } from '../model/plugin';
import { bitchuteHosts, getHost, twitterHosts, youtubeHosts } from '../util/hosts';

export const embedPlugin: Plugin = {
  tag: 'plugin/embed',
  name: $localize`Embed`,
  config: {
    type: 'viewer',
    generated: $localize`Generated by jasper-ui ${moment().toISOString()}`,
    form: [{
      key: 'url',
      type: 'url',
      props: {
        label: $localize`URL:`,
      },
    }, {
      key: 'width',
      type: 'number',
      props: {
        label: $localize`Width:`,
        min: 200,
      },
      validation: {
        messages: {
          min: 'Width must be at least 200px.'
        }
      }
    }, {
      key: 'height',
      type: 'number',
      props: {
        label: $localize`Height:`,
        min: 200
      },
      validation: {
        messages: {
          min: 'Height must be at least 200px.'
        }
      }
    }],
  },
  defaults: {},
  schema: {
    optionalProperties: {
      url: { type: 'string' },
      width: { type: 'int32', nullable: true },
      height: { type: 'int32', nullable: true },
    },
  },
};

export function isKnownEmbed(url: string) {
  const host = getHost(url);
  if (!host) return false;
  return youtubeHosts.includes(host) || bitchuteHosts.includes(host) || twitterHosts.includes(host);
}


export function isYoutubeEmbed(url: string) {
  const host = getHost(url);
  if (!host) return false;
  return youtubeHosts.includes(host);
}


export function isTwitterEmbed(url: string) {
  const host = getHost(url);
  if (!host) return false;
  return twitterHosts.includes(host);
}
